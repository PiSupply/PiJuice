#!/bin/bash

if [ -d "/var/lib" ]; then
	if [ ! -d "/var/lib/pijuice" ]; then
		mkdir -p /var/lib/pijuice
		echo directory created
	fi
	if [ ! -f "/var/lib/pijuice/pijuice_config.JSON" ]; then
		echo "{\"system_task\":{\"enabled\": true}}" > /var/lib/pijuice/pijuice_config.JSON
		echo settings file created
	fi
	chmod -R 777 /var/lib/pijuice
	echo permission set
else
	echo "/var/lib not exists"
	exit 1
fi

# enable i2c
set_config_var() {
  lua - "$1" "$2" "$3" <<EOF > "$3.bak"
local key=assert(arg[1])
local value=assert(arg[2])
local fn=assert(arg[3])
local file=assert(io.open(fn))
local made_change=false
for line in file:lines() do
  if line:match("^#?%s*"..key.."=.*$") then
    line=key.."="..value
    made_change=true
  end
  print(line)
end

if not made_change then
  print(key.."="..value)
end
EOF
mv "$3.bak" "$3"
}

if [ ! -f /sys/class/i2c-dev/i2c-1/dev ]; then
    echo "Enabling I2C"
	BLACKLIST=/etc/modprobe.d/raspi-blacklist.conf
	CONFIG=/boot/config.txt
	SETTING=on
	
	set_config_var dtparam=i2c_arm $SETTING $CONFIG &&
	if ! [ -e $BLACKLIST ]; then
		touch $BLACKLIST
	fi
	sed $BLACKLIST -i -e "s/^\(blacklist[[:space:]]*i2c[-_]bcm2708\)/#\1/"
	sed /etc/modules -i -e "s/^#[[:space:]]*\(i2c[-_]dev\)/\1/"
	if ! grep -q "^i2c[-_]dev" /etc/modules; then
		printf "i2c-dev\n" >> /etc/modules
	fi
	dtparam i2c_arm=$SETTING
	modprobe i2c-dev
fi

if [ -f /sys/class/i2c-dev/i2c-1/dev ]; then
	echo "pijuice.service is not active running, attempting to enable"
	systemctl unmask pijuice.service
	systemctl enable pijuice.service
	systemctl restart pijuice.service
	#systemctl status pijuice.service
fi

exit 0
